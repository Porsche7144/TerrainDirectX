// HLSL

cbuffer MatrixBuffer
{
	matrix worldMatrix;
	matrix viewMatrix;
	matrix projMatrix;
};


struct VertexInputType
{
	float4 pos : POSITION;
	float4 color : COLOR;
};

struct PixelInputType
{
	float4 pos : SV_POSITION;
	float4 color : COLOR;
};

///////////////////////////////////////
// 버텍스 쉐이더

PixelInputType ColorVertexShader(VertexInputType input)
{
	PixelInputType output;

	// 행렬 계산을 위해 위치 벡터를 4단위로 변경
	input.position.w = 1.0f;

	// 월드, 뷰, 투영 행렬에 대한 정점의 위치를 계산
	output.position = mul(input.position, worldMatrix);
	output.position = mul(input.position, viewMatrix);
	output.position = mul(input.position, projMatrix);

	// 픽셀 쉐이더가 사용할 색상 전달
	output.color = input.color;

	return output;
}